name: init-vcaml-bleeding-project
# TODO: on: push
on: workflow_dispatch
jobs:
  init-vcaml-bleeding-project:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      NVIM_VERSION: v0.9.5
      NVIM_DOWNLOAD_URL: https://github.com/neovim/neovim/releases/download
    steps:
    - name: Choose Neovim tarball for Linux
      if: matrix.os == 'ubuntu-latest'
      run: echo "NVIM_TARBALL=nvim-linux64.tar.gz" >> "$GITHUB_ENV"
    - name: Choose Neovim tarball for MacOS
      if: matrix.os == 'macos-latest'
      run: echo "NVIM_TARBALL=nvim-macos.tar.gz" >> "$GITHUB_ENV"
    - name: Download and extract Neovim tarball; add nvim to PATH
      run: |
        echo "$NVIM_DOWNLOAD_URL"
        echo "$NVIM_VERSION"
        echo "$NVIM_TARBALL"
        curl -L "$NVIM_DOWNLOAD_URL/$NVIM_VERSION/$NVIM_TARBALL" -o nvim.tar.gz
        mkdir nvim
        tar -xzvf nvim.tar.gz -C nvim --strip-components 1
        echo "NVIM_PATH=$PWD/nvim/bin" >> "$GITHUB_ENV"
    - name: Download opam for Linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install opam -y
    - name: Download opam for MacOS
      if: matrix.os == 'macos-latest'
      run: brew install opam
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Initialize vcaml project
      run: |
        chmod +x init-bleeding-vcaml-project.sh
        ./init-bleeding-vcaml-project.sh hello-vcaml
        cd hello-vcaml
        eval "$(opam env)"
        export PATH="$NVIM_PATH:$PATH"
        echo "NVIM_PATH: $NVIM_PATH"
        echo "PATH: $PATH"
        echo "which nvim: $(which nvim)"
        dune runtest
